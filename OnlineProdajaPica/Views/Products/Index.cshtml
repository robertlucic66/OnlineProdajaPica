@model IEnumerable<OnlineProdajaPica.Models.Product>

@{
    ViewBag.Title = "Index";
    var porukaa = TempData["Poruka"] as string;
    var categories = ViewBag.Categories;
}

@if (!String.IsNullOrEmpty(porukaa))
{
    <body onload="pokaziAlert('@porukaa')">
    </body>
}




<h2 style="text-align:center">Pića</h2>

<style>
    * {
        box-sizing: border-box;
    }
    /* Create two equal columns that floats next to each other */
    .column {
        float: left;
        width: 50%;
        padding: 10px;
        height: 350px;
    }
    /* Clear floats after the columns */
    .row:after {
        content: "";
        display: table;
        clear: both;
    }
    /* Style the buttons */
    .btn2 {
        border: none;
        outline: none;
        padding: 12px 16px;
        background-color: #f1f1f1;
        cursor: pointer;
    }

        .btn2:hover {
            background-color: #ddd;
        }

        .btn2.active {
            background-color: #666;
            color: white;
        }
    .quantity {
        border:none;
        height: 40px;
        width: 45px;
        text-align: center;
        font-size: 26px;
        display: inline-block;
        vertical-align: middle;
        background:none;
    }

    .price__ul {
        top:2px;
    }
    .price .price--kn {
        line-height: 70px;
        font-size: 70px;
    }
    .price--li {
        font-size: 35px;
        line-height: 35px;
    }
    .price--c {
        font-size: 18px;
    }

    @@media screen and (max-width:390px){
        .forma{
            transform: scale(0.7) translate(-40px);
            width:180px;
        }
        .price{
            transform: scale(0.7) translate(-20%);
        }

    }

    #imeProizvoda{
        font-size:clamp(18px, 2.3vmin, 24px);
    }

    #myInput {
        background-image: url('/img/icons/search-icon.png');
        background-position: 13px 15px;
        background-repeat: no-repeat;
        width: 100%;
        font-size: 16px;
        padding: 10px 20px 10px 40px;
        border: 1px solid #ddd;
        margin-bottom: 10px;
    }

    .minusButton, .plusButton {
        color: white;
        width: 40px;
        height: 40px;
        background: #666;
        border-radius: 8px;
        padding: 8px 8px 10px 10px;
        border: 2px outset #ddd;
        display: inline-block;
        vertical-align: middle;
        text-align: center;
        cursor: pointer;
    }
    .minusButton:hover, .plusButton:hover {
        background-color: #444
    }

</style>



<div class="dropdown" style="margin-bottom:10px">

    <button class="btn btn-default dropdown-toggle" type="button" id="menu1" data-toggle="dropdown">
        <span id="odabranaKategorija">@Session["CurrentCategory"]</span>
        <span class="caret"></span>
    </button>

    <ul class="dropdown-menu" role="menu" aria-labelledby="menu1">
        <li role="presentation"><a role="menuitem" href="~/Products/Kategorije">Svi proizvodi</a></li>
        <li role="presentation" class="divider"></li>
        @foreach (var item in categories)
        {
            <li onclick="mojaFunkcija(this.innerText)" id="categoryLi" role="presentation"><a id="categoryName" role="menuitem" href="~/Products/Kategorije/@item.Name">@item.Name</a></li>
        }
    </ul>
</div>

<div>
    <div id="btnContainer" style="width:40%; float:left">
        <button id="buttonGrid" class="btn btn2 active" onclick="gridView()"><i class="fa fa-th-large"></i> Rešetke</button>
        <button id="buttonList" class="btn btn2" onclick="listView()"><i class="fa fa-bars"></i> Lista</button>
    </div>
    <div style="width:60%; float:right;">
        <input class="pull-right" type="text" id="myInput" onkeyup="myFunction()" placeholder="Upišite pojam..." title="Pretraživanje proizvoda">
    </div>
</div>

<br>
<input type="hidden" id="poruka" value="@ViewBag.Poruka" />

<div id="glavniDiv" style="display:inline-block; width:100%">
    @foreach (var item in Model)
    {
        <div id="div-@item.Id" class="column banHighlight" style="background-color:rgba(170, 170, 170, 0.28); border:1px outset white">
            <div style="float:left; width: 50%; height:330px;">
                <div style="height:90px; overflow:hidden;">
                    @Html.ActionLink(item.Name, "Details", new { id = item.Id }, new { @id="imeProizvoda" })
                    <p>@Html.DisplayFor(modelItem => item.Description)</p>
                </div>

                <div class="price">
                    <span class="price--kn">@((int)item.Price)</span>
                    <div class="price__ul">
                        @{ int broj = (int)((item.Price - Math.Truncate(item.Price)) * 100); }
                        <span class="price--li">@broj</span>
                        <small class="price--c">kn/kom</small>
                    </div>
                </div>

               

                @using (Html.BeginForm("AddToCart", "Cart", new { id = item.Id }, FormMethod.Get, new { @class="forma"}))
                {
                    string quantityId = "quantity" + item.Id;
                    <div style="padding-top:40px; padding-bottom:15px;">
                        <span class="minusButton" onclick="smanjiKolicinu(@item.Id)">-</span>
                        <div style="display:inline-block;">
                            <input id="@quantityId" class="quantity" type="text" name="quantity" value="1" onchange="provjeriInput(this)" />
                            <text style="vertical-align: middle; height:26px; padding-right:5px;">kom</text>
                        </div>
                        
                        <span class="plusButton" onclick="povecajKolicinu(@item.Id)">+</span>


                        @*<input id="quantity" name="quantity" type="number" value="1" min="1">
                        <span>kom</span>*@
                    </div>
                    <div>
                        <button type="submit" class="btn btn-success" style="border:2px inset white; height:50px; font-size:17px; width:169px;">Dodaj u košaricu</button>
                    </div>
                }

            </div>
            <div style="float:right; width: 50%; text-align:center;">
                <img src="~/img/products/@item.ImageUrl" style="height:280px; margin-top:25px;" />
            </div>
        </div>

    }
</div>

<script>
    function onlyListView() {
        if (window.innerWidth < 769) {
            var buttonList = document.getElementById("buttonList");
            document.getElementById("buttonGrid").style.display = "none";
            buttonList.click();
        }
        if (window.innerWidth > 768) {
            document.getElementById("buttonGrid").style.display = null;
            var buttonGrid = document.getElementById("buttonGrid");
            buttonGrid.click();        
        }
    }
    var timeOut = null;

    window.onresize = function () {
        if (timeOut != null)
            clearTimeout(timeOut);

        timeOut = setTimeout(function () {
            onlyListView();
        }, 100);
    };


</script>

<script>
    // Get the elements with class="column"
    var elements = document.getElementsByClassName("column");
    // Declare a loop variable
    var i;
    // List View
    function listView() {
        for (i = 0; i < elements.length; i++) {
            elements[i].style.width = "100%";
        }
    }
    // Grid View
    function gridView() {
        for (i = 0; i < elements.length; i++) {
            elements[i].style.width = "50%";
        }
    }

    /* Optional: Add active class to the current button (highlight it) */
    var container = document.getElementById("btnContainer");
    var btns = container.getElementsByClassName("btn");
    for (var i = 0; i < btns.length; i++) {
        btns[i].addEventListener("click", function () {
            var current = document.getElementsByClassName("active");
            current[0].className = current[0].className.replace(" active", "");
            this.className += " active";
        });
    }
    onlyListView();
    
</script>

<script>
    function pokaziAlert(poruka) {
        alert(poruka);
    }
</script>

<script>
    function myFunction() {
        var input, filter, ul, li, a, i, txtValue;
        input = document.getElementById("myInput");
        filter = input.value.toUpperCase();
        ul = document.getElementById("glavniDiv");
        li = ul.getElementsByClassName("column");
        for (i = 0; i < li.length; i++) {
            a = li[i].getElementsByTagName("a")[0];
            txtValue = a.textContent || a.innerText;
            if (txtValue.toUpperCase().indexOf(filter) > -1) {
                li[i].style.display = "";
            } else {
                li[i].style.display = "none";
            }
        }
    }
</script>

<script>
    function provjeriInput(input) {
        var count = parseInt(input.value);
        if (count < 1 || count == null || Number.isNaN(count)) {
            count = 1
            alert("Neispravan unos količine. Količina će se vratiti na 1");
            input.value = count;
        }      
    }

    function smanjiKolicinu(id) {
        var nameOfInput = "quantity" + id;
        var input = document.getElementById(nameOfInput);
        var count = parseInt(input.value);
        if (count < 1 || count == null || Number.isNaN(count)) {                
            count = 1;         
        }
        else {
            count = count <= 1 ? 1 : count - 1;          
        }    
        input.value = count;
    }
    function povecajKolicinu(id) {
        var nameOfInput = "quantity" + id;
        var input = document.getElementById(nameOfInput);
        var count = parseInt(input.value);
        if (count < 1 || count == null || Number.isNaN(count)) {
            count = 1;
        }
        else {
            count++;
        }    
        input.value = count;
    }
</script>


